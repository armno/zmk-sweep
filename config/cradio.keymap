// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        lang {
            bindings = <&kp LG(SPACE)>;
            key-positions = <14 15>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        lhm: left_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
        };

        rhm: right_homerow_mode {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q    &kp W         &kp E            &kp R        &kp T        &kp Y            &kp U                     &kp I             &kp O         &kp BACKSPACE
&lt 4 A  &lhm LCTRL S  &lhm LEFT_ALT D  &lhm LGUI F  &kp G        &kp H            &rhm RGUI J               &rhm RIGHT_ALT K  &rhm RCTRL L  &kp P
&kp Z    &kp X         &kp C            &kp V        &kp B        &kp N            &kp M                     &kp COMMA         &kp DOT       &kp FSLH
                                        &to 1        &kp SPACE    &kp RIGHT_SHIFT  &kp LS(LA(LC(LEFT_GUI)))
            >;
        };

        code {
            bindings = <
&lt 3 EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR  &kp PERCENT       &kp CARET  &kp AMPERSAND   &kt ASTERISK               &kp LEFT_PARENTHESIS         &kp BACKSPACE
&kp TAB            &kp LCTRL    &kp LEFT_ALT  &kp LGUI    &kp ESCAPE        &kp MINUS  &hm LGUI EQUAL  &hm RALT LEFT_PARENTHESIS  &hm RCTRL RIGHT_PARENTHESIS  &kp ENTER
&kp LEFT_SHIFT     &kp GRAVE    &trans        &trans      &trans            &kp SQT    &kp SEMICOLON   &kp LEFT_BRACKET           &kp RIGHT_BRACKET            &kp BACKSLASH
                                              &to 2       &sk LEFT_SHIFT    &kp SPACE  &to 0
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans        &sys_reset       &trans              &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_PLUS      &kp BACKSPACE
&trans  &trans  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp K_MUTE          &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_MINUS     &kp ENTER
&trans  &trans  &kp K_PREV    &kp K_NEXT       &kp K_PLAY_PAUSE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_MULTIPLY  &kp PERIOD
                              &to 2            &trans              &kp NUMBER_0  &to 0
            >;
        };

        thai {
            bindings = <
&kp N1          &kp N2  &kp N3  &kp N4  &kp N5            &kp N6                &kp N7                 &kp N8          &kp N9           &kp N0
&trans          &trans  &trans  &trans  &trans            &kp MINUS             &kp EQUAL              &kp LBKT        &kp RBKT         &kp BSLH
&bt BT_CLR_ALL  &trans  &trans  &trans  &trans            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE
                                &to 0   &kp LEFT_SHIFT    &kp ENTER             &to 0
            >;
        };

        arrows {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N7          &kp N8        &kp N9     &kp N0
&trans        &kp TAB       &trans        &trans        &kp ESCAPE    &kp LEFT      &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp ENTER
&trans        &trans        &trans        &trans        &kp K_MUTE    &kp MINUS     &kp EQUAL       &trans        &trans     &trans
                                          &trans        &trans        &kp ENTER     &trans
            >;
        };
    };
};
